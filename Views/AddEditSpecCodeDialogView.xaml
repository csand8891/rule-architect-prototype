<Window x:Class="RuleArchitectPrototype.Views.AddEditSpecCodeDialogView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RuleArchitectPrototype.Views"
        xmlns:vm="clr-namespace:RuleArchitectPrototype.ViewModels"
        xmlns:models="clr-namespace:RuleArchitectPrototype.Models"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:converters="clr-namespace:RuleArchitectPrototype.Converters" 
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=vm:AddEditSpecCodeDialogViewModel, IsDesignTimeCreatable=False}"
        SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterOwner"
        FocusManager.FocusedElement="{Binding ElementName=SpecNoTextBox}"
        Width="450" MaxWidth="600" MinHeight="480" MaxHeight="700" ShowInTaskbar="False">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:NullToValueConverter x:Key="NullToValueConverter"/>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
            <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </Window.Resources>

    <Window.Title>
        <Binding Path="SelectedExistingSpecCodeDefinition" 
                 Converter="{StaticResource NullToValueConverter}" 
                 ConverterParameter="Add Specification Code Association/Edit Specification Code Association" />
    </Window.Title>

    <Grid Margin="16">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
            <TextBlock Text="Machine Type Context: " FontWeight="Bold"/>
            <TextBlock Text="{Binding CurrentSoftwareOptionMachineType.Name}" />
        </StackPanel>

        <Grid Grid.Row="1" Margin="0,0,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="SpecNoTextBox" Grid.Column="0"
                     materialDesign:HintAssist.Hint="Spec No. (1-32)"
                     Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                     Text="{Binding SpecCodeNo, UpdateSourceTrigger=PropertyChanged}"
                     Margin="0,0,8,0"/>
            <TextBlock Grid.Column="1" Text="-" VerticalAlignment="Center" Margin="0,10,8,0" FontSize="16"/>
            <TextBox Grid.Column="2"
                     materialDesign:HintAssist.Hint="Bit (0-7)"
                     Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                     Text="{Binding SpecCodeBit, UpdateSourceTrigger=PropertyChanged}"
                     Margin="0,0,0,0"/>
        </Grid>

        <Button Grid.Row="2" Content="Manually Check/Update Definition State" 
                Command="{Binding ManualUpdateButtonCommand}" 
                Margin="0,5,0,5" HorizontalAlignment="Left"
                Style="{StaticResource MaterialDesignOutlinedButton}"/>

        <GroupBox Grid.Row="3" Header="Specification Code Definition" Margin="0,5,0,10"
                  Visibility="{Binding IsSpecCodeNoEntered, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
            <StackPanel Margin="10">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                    <TextBlock Text="Status: "/>
                    <TextBlock Text="Creating New Definition" FontWeight="Bold"
                                 Visibility="{Binding IsCreatingNewSpecCodeDefinition, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"/>
                    <TextBlock Text="Existing Definition Found" FontWeight="Bold"
                                 Visibility="{Binding IsCreatingNewSpecCodeDefinition, Converter={StaticResource InverseBooleanToVisibilityConverter}, Mode=OneWay}"/>
                </StackPanel>

                <TextBox materialDesign:HintAssist.Hint="Description"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         Text="{Binding NewSpecCodeDescription, UpdateSourceTrigger=PropertyChanged}"
                         IsEnabled="{Binding IsCreatingNewSpecCodeDefinition, Mode=OneWay}"
                         TextWrapping="Wrap" MinLines="2" MaxLines="3" VerticalScrollBarVisibility="Auto"
                         Margin="0,8,0,8"/>

                <ComboBox materialDesign:HintAssist.Hint="Category"
                          ItemsSource="{Binding AvailableCategories}"
                          SelectedItem="{Binding SelectedNewSpecCodeCategory, UpdateSourceTrigger=PropertyChanged}"
                          Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          IsEnabled="{Binding IsCreatingNewSpecCodeDefinition, Mode=OneWay}"
                          Margin="0,8,0,0"/>
            </StackPanel>
        </GroupBox>

        <ComboBox Grid.Row="4" materialDesign:HintAssist.Hint="Link to Activation Rule (Optional)"
                  ItemsSource="{Binding AvailableActivationRules}"
                  SelectedItem="{Binding SelectedActivationRule, UpdateSourceTrigger=PropertyChanged}"
                  DisplayMemberPath="RuleName" 
                  materialDesign:ComboBoxAssist.ShowSelectedItem="True"
                  Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                  Margin="0,5,0,10"/>

        <TextBox Grid.Row="5" materialDesign:HintAssist.Hint="Specific Interpretation for this Software Option"
                 Text="{Binding SpecificInterpretation, UpdateSourceTrigger=PropertyChanged}"
                 Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                 TextWrapping="Wrap" AcceptsReturn="True" MinLines="3" MaxLines="5"
                 VerticalScrollBarVisibility="Auto" Margin="0,5,0,10"/>

        <StackPanel Grid.Row="6" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,16,0,0">
            <Button Content="Cancel" Command="{Binding CancelCommand}" IsCancel="True"
                    Style="{StaticResource MaterialDesignOutlinedButton}" Margin="0,0,8,0"/>
            <Button Content="Save" Command="{Binding SaveCommand}" IsDefault="True"
                    Style="{StaticResource MaterialDesignRaisedButton}"/>
        </StackPanel>
    </Grid>
</Window>
