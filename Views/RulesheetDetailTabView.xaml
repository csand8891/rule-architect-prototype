<UserControl x:Class="RuleArchitectPrototype.Views.RulesheetDetailTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RuleArchitectPrototype.Views"
             xmlns:vm="clr-namespace:RuleArchitectPrototype.ViewModels"
             xmlns:models="clr-namespace:RuleArchitectPrototype.Models"
             xmlns:converters="clr-namespace:RuleArchitectPrototype.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=vm:RulesheetDetailTabViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="600" d:DesignWidth="700">
    <UserControl.Resources>
        <ResourceDictionary>
        </ResourceDictionary>
    </UserControl.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Padding="10">
        <StackPanel>
            <TextBlock Text="{Binding EditableSoftwareOption.PrimaryName, StringFormat='Details for: {0}'}" 
                       Style="{StaticResource MaterialDesignHeadline5TextBlock}" Margin="0,0,0,16"/>

            <StackPanel Orientation="Horizontal" Margin="0,0,0,16" HorizontalAlignment="Right">
                <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                        Command="{Binding EditCommand}"
                        Visibility="{Binding IsEditMode, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                        ToolTip="Edit Rulesheet"
                        Margin="0,0,8,0">
                    <materialDesign:PackIcon Kind="Pencil" />
                </Button>

                <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                        Command="{Binding SaveCommand}"
                        Visibility="{Binding IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                        ToolTip="Save Changes"
                        Background="{DynamicResource PrimaryHueMidBrush}"
                        Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                        Margin="0,0,8,0">
                    <materialDesign:PackIcon Kind="ContentSave" />
                </Button>

                <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                        Command="{Binding CancelCommand}"
                        Visibility="{Binding IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                        ToolTip="Cancel Edit"
                        Background="LightGray"
                        Foreground="Black"
                        Margin="0,0,16,0">
                    <materialDesign:PackIcon Kind="Cancel" />
                </Button>

                <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                        Command="{Binding DeleteCommand}"
                        Visibility="{Binding IsEditMode, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                        ToolTip="Delete Rulesheet"
                        Background="IndianRed"
                        Foreground="White"
                        Margin="0,0,8,0">
                    <materialDesign:PackIcon Kind="Delete" />
                </Button>
            </StackPanel>

            <TabControl materialDesign:ColorZoneAssist.Mode="Standard" Style="{StaticResource MaterialDesignNavigatilRailTabControl}">
                <TabControl.ItemContainerStyle>
                    <Style TargetType="TabItem" BasedOn="{StaticResource MaterialDesignNavigationRailTabItem}">
                        <Setter Property="MinWidth" Value="150"/>
                    </Style>
                </TabControl.ItemContainerStyle>

                <TabItem Header="General">
                    <materialDesign:ColorZone Mode="Standard" Padding="10">
                        <StackPanel DataContext="{Binding EditableSoftwareOption}">
                            <TextBox materialDesign:HintAssist.Hint="Primary Name"
                                     Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                     Text="{Binding PrimaryName, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, NotifyOnValidationError=True}"
                                     IsReadOnly="{Binding DataContext.IsEditMode, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource InverseBooleanConverter}}"
                                     Margin="0,0,0,8"/>
                            <TextBox materialDesign:HintAssist.Hint="Notes"
                                     Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                     Text="{Binding Notes, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="{Binding DataContext.IsEditMode, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource InverseBooleanConverter}}"
                                     TextWrapping="Wrap" AcceptsReturn="True" MinLines="3" MaxLines="5"
                                     VerticalScrollBarVisibility="Auto" Margin="0,8,0,8"/>
                            <TextBox materialDesign:HintAssist.Hint="Option Number Display"
                                     Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                     Text="{Binding PrimaryOptionNumberDisplay, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="{Binding DataContext.IsEditMode, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource InverseBooleanConverter}}"
                                     Margin="0,8,0,8"/>
                            <ComboBox materialDesign:HintAssist.Hint="Control System"
                                      ItemsSource="{Binding DataContext.AvailableControlSystems, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                      DisplayMemberPath="Name"
                                      SelectedValuePath="ControlSystemId"
                                      SelectedValue="{Binding ControlSystemId, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding ControlSystem, UpdateSourceTrigger=PropertyChanged}"
                                      IsEnabled="{Binding DataContext.IsEditMode, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                      Margin="0,8,0,8"/>
                            <TextBox materialDesign:HintAssist.Hint="Checked By"
                                     Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                     Text="{Binding CheckedBy, UpdateSourceTrigger=PropertyChanged}"
                                     IsReadOnly="{Binding DataContext.IsEditMode, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource InverseBooleanConverter}}"
                                     Margin="0,8,0,8"/>
                            <DatePicker materialDesign:HintAssist.Hint="Checked Date"
                                        SelectedDate="{Binding CheckedDate, UpdateSourceTrigger=PropertyChanged}"
                                        Style="{StaticResource MaterialDesignFloatingHintDatePicker}"
                                        IsEnabled="{Binding DataContext.IsEditMode, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        Margin="0,8,0,16"/>
                        </StackPanel>
                    </materialDesign:ColorZone>
                </TabItem>

                <TabItem Header="Option Configuration" IsEnabled="{Binding CanAccessDetailedTabs}">
                    <materialDesign:ColorZone Mode="Standard" Padding="10">
                        <StackPanel>
                            <Grid Margin="0,0,0,8">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="Specification Codes" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" VerticalAlignment="Center"/>
                                <Button Grid.Column="1" Style="{StaticResource MaterialDesignToolButton}" 
                                        Command="{Binding AddSpecCodeCommand}"
                                        ToolTip="Add Specification Code"
                                        Visibility="{Binding IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <materialDesign:PackIcon Kind="Add" />
                                </Button>
                            </Grid>
                            <DataGrid ItemsSource="{Binding EditableSoftwareOption.SpecificationCodes}" AutoGenerateColumns="False" 
                                      IsReadOnly="{Binding IsEditMode, Converter={StaticResource InverseBooleanConverter}}" 
                                      CanUserAddRows="{Binding IsEditMode}" CanUserDeleteRows="True" 
                                      MaxHeight="250" Margin="0,0,0,16"
                                      SelectionUnit="CellOrRowHeader" SelectionMode="Extended">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Category" Binding="{Binding SpecCodeDefinition.Category}" Width="Auto" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="No." Binding="{Binding SpecCodeDefinition.SpecCodeNo}" Width="Auto" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Bit" Binding="{Binding SpecCodeDefinition.SpecCodeBit}" Width="Auto" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Description" Binding="{Binding SpecCodeDefinition.Description}" Width="2*" IsReadOnly="True"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Grid Margin="0,10,0,8">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="Activation Rules" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" VerticalAlignment="Center"/>
                                <Button Grid.Column="1" Style="{StaticResource MaterialDesignToolButton}" 
                                        Command="{Binding AddActivationRuleCommand}"
                                        ToolTip="Add Activation Rule"
                                        Visibility="{Binding IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <materialDesign:PackIcon Kind="Add" />
                                </Button>
                            </Grid>
                            <DataGrid ItemsSource="{Binding EditableSoftwareOption.ActivationRules}" AutoGenerateColumns="False" 
                                      IsReadOnly="{Binding IsEditMode, Converter={StaticResource InverseBooleanConverter}}"
                                      CanUserAddRows="{Binding IsEditMode}" CanUserDeleteRows="True" 
                                      MaxHeight="150"
                                      SelectionUnit="CellOrRowHeader" SelectionMode="Extended">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Rule Name" Binding="{Binding RuleName, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                                    <DataGridTextColumn Header="Setting" Binding="{Binding ActivationSetting, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                                    <DataGridTextColumn Header="Notes" Binding="{Binding Notes, UpdateSourceTrigger=PropertyChanged}" Width="2*"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </materialDesign:ColorZone>
                </TabItem>

                <TabItem Header="Requirements" IsEnabled="{Binding CanAccessDetailedTabs}">
                    <materialDesign:ColorZone Mode="Standard" Padding="10">
                        <StackPanel>
                            <Grid Margin="0,0,0,8">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="Requirements" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" VerticalAlignment="Center"/>
                                <Button Grid.Column="1" Style="{StaticResource MaterialDesignToolButton}" 
                                        Command="{Binding AddRequirementCommand}"
                                        ToolTip="Add Requirement"
                                        Visibility="{Binding IsEditMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <materialDesign:PackIcon Kind="Add" />
                                </Button>
                            </Grid>
                            <DataGrid ItemsSource="{Binding EditableSoftwareOption.Requirements}" AutoGenerateColumns="False" 
                                      IsReadOnly="{Binding IsEditMode, Converter={StaticResource InverseBooleanConverter}}"
                                      CanUserAddRows="{Binding IsEditMode}" CanUserDeleteRows="True" 
                                      MaxHeight="300"
                                      SelectionUnit="CellOrRowHeader" SelectionMode="Extended">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Type" Binding="{Binding RequirementType, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                                    <DataGridTextColumn Header="Condition" Binding="{Binding Condition, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                                    <DataGridTextColumn Header="Value" Binding="{Binding GeneralRequiredValue, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                                    <DataGridTextColumn Header="OSP File" Binding="{Binding OspFileName, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                                    <DataGridTextColumn Header="OSP Version" Binding="{Binding OspFileVersion, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                                    <DataGridTextColumn Header="Notes" Binding="{Binding Notes, UpdateSourceTrigger=PropertyChanged}" Width="2*"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </materialDesign:ColorZone>
                </TabItem>
            </TabControl>
        </StackPanel>
    </ScrollViewer>
</UserControl>
