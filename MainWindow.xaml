<Window x:Class="RuleArchitectPrototype.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RuleArchitectPrototype"
        xmlns:vm="clr-namespace:RuleArchitectPrototype.ViewModels" 
        xmlns:models="clr-namespace:RuleArchitectPrototype.Models"
        mc:Ignorable="d"
        Title="Rulesheet Prototype" Height="700" Width="1000"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}">
    <Window.DataContext>
        <vm:RulesheetViewModel/>
    </Window.DataContext>

    <DockPanel LastChildFill="True">

        <StatusBar DockPanel.Dock="Bottom" Name="MainStatusBar">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}" Margin="4,0"/>
            </StatusBarItem>
        </StatusBar>

        <Grid Margin="16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="350" MinWidth="250"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*" MinWidth="450"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,8">
                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                            ToolTip="Add New Rulesheet"
                            Command="{Binding AddNewCommand}"
                            Margin="0,0,8,0">
                        <materialDesign:PackIcon Kind="Add" />
                    </Button>
                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                            ToolTip="Delete Selected Rulesheet"
                            Command="{Binding DeleteCommand}"
                            Background="{DynamicResource MaterialDesignValidationErrorBrush}"
                            Margin="0,0,8,0">
                        <materialDesign:PackIcon Kind="Delete" />
                    </Button>
                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                            ToolTip="Clear Filter"
                            Command="{Binding ClearFilterCommand}" 
                            Margin="0,0,8,0"
                            Visibility="{Binding SearchText, Converter={StaticResource StringToVisibilityConverter}}">
                        <materialDesign:PackIcon Kind="FilterRemoveOutline" />
                    </Button>
                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                             ToolTip="Toggle Search Bar"
                             Command="{Binding ToggleSearchBarVisibilityCommand}"
                             Margin="0,0,8,0">
                        <materialDesign:PackIcon Kind="MagnifyScan" />
                    </Button>
                        
                    
                </StackPanel>

                <TextBox Grid.Row="1"
                         materialDesign:HintAssist.Hint="Search Rulesheets (Name, Option #, Control System)"
                         Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         Margin="0,0,0,8"
                         materialDesign:TextFieldAssist.HasClearButton="True"
                         Visibility="{Binding IsSearchBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                <DataGrid Grid.Row="2"
                          ItemsSource="{Binding RulesheetsView}" SelectedItem="{Binding SelectedRulesheet}"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          IsReadOnly="True"
                          SelectionMode="Single"
                          materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                          materialDesign:DataGridAssist.ColumnHeaderPadding="8">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Option Name" Binding="{Binding PrimaryName}" Width="*"/>
                        <DataGridTextColumn Header="Option Number" Binding="{Binding PrimaryOptionNumberDisplay}" Width="Auto"/>
                        <DataGridTextColumn Header="Control Type" Binding="{Binding ControlSystem.Name}" Width="Auto"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="LightGray"/>

            <ScrollViewer Grid.Column="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled"
                          DataContext="{Binding EditableRulesheet}" 
                          Visibility="{Binding ., Converter={StaticResource NullToVisibilityConverter}}">
                <StackPanel Margin="8,0,0,0">
                    <TextBlock Text="Rulesheet Details" Style="{StaticResource MaterialDesignHeadline6TextBlock}" Margin="0,0,0,16"/>

                    <TextBox materialDesign:HintAssist.Hint="Primary Name"
                             Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             Text="{Binding PrimaryName, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, NotifyOnValidationError=True}"
                             IsReadOnly="{Binding DataContext.IsEditMode, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource InverseBooleanConverter}}"
                             Margin="0,0,0,8"/>

                    <TextBox materialDesign:HintAssist.Hint="Notes"
                             Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             Text="{Binding Notes, UpdateSourceTrigger=PropertyChanged}"
                             IsReadOnly="{Binding DataContext.IsEditMode, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource InverseBooleanConverter}}"
                             TextWrapping="Wrap" AcceptsReturn="True" MinLines="3" MaxLines="5"
                             VerticalScrollBarVisibility="Auto"
                             Margin="0,8,0,8"/>

                    <TextBox materialDesign:HintAssist.Hint="Option Number Display"
                             Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             Text="{Binding PrimaryOptionNumberDisplay, UpdateSourceTrigger=PropertyChanged}"
                             IsReadOnly="{Binding DataContext.IsEditMode, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource InverseBooleanConverter}}"
                             Margin="0,8,0,8"/>

                    <TextBox materialDesign:HintAssist.Hint="Checked By"
                             Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             Text="{Binding CheckedBy, UpdateSourceTrigger=PropertyChanged}"
                             IsReadOnly="{Binding DataContext.IsEditMode, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource InverseBooleanConverter}}"
                             Margin="0,8,0,8"/>

                    <DatePicker materialDesign:HintAssist.Hint="Checked Date"
                                SelectedDate="{Binding CheckedDate, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource MaterialDesignFloatingHintDatePicker}"
                                IsEnabled="{Binding DataContext.IsEditMode, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                Margin="0,8,0,16"/>

                    <TextBlock Text="Specification Codes" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Margin="0,16,0,8"/>
                    <DataGrid ItemsSource="{Binding SpecificationCodes}"
                      AutoGenerateColumns="False"
                      IsReadOnly="True" 
                      CanUserAddRows="False"
                      SelectionMode="Extended" 
                      materialDesign:DataGridAssist.CellPadding="8"
                      materialDesign:DataGridAssist.ColumnHeaderPadding="8"
                      MaxHeight="300">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Machine" Binding="{Binding SpecCodeDefinition.MachineType.Name}" Width="Auto"/>
                            <DataGridTextColumn Header="No." Binding="{Binding SpecCodeDefinition.SpecCodeNo}" Width="Auto"/>
                            <DataGridTextColumn Header="Bit" Binding="{Binding SpecCodeDefinition.SpecCodeBit}" Width="Auto"/>
                            <DataGridTextColumn Header="Description" Binding="{Binding SpecCodeDefinition.Description}" Width="2*"/>
                            <DataGridTextColumn Header="Category" Binding="{Binding SpecCodeDefinition.Category}" Width="Auto"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <TextBlock Text="Defined Activation Rules for this Option" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Margin="0,16,0,8"/>
                    <DataGrid ItemsSource="{Binding ActivationRules}"
                      AutoGenerateColumns="False"
                      IsReadOnly="True"
                      CanUserAddRows="False"
                      SelectionMode="Single"
                      materialDesign:DataGridAssist.CellPadding="8"
                      materialDesign:DataGridAssist.ColumnHeaderPadding="8"
                      MaxHeight="200">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Rule Name" Binding="{Binding RuleName}" Width="*"/>
                            <DataGridTextColumn Header="Setting" Binding="{Binding ActivationSetting}" Width="*"/>
                            <DataGridTextColumn Header="Notes" Binding="{Binding Notes}" Width="2*"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <TextBlock Text="Other Related Collections (TODO: Implement UI):" Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Margin="0,20,0,8"/>
                    <TextBlock Text="{Binding OptionNumbers.Count, StringFormat='Option Numbers: {0}'}" />
                    <TextBlock Text="{Binding ActivationRules.Count, StringFormat='Defined Activation Rules for Option: {0}'}" />
                    <TextBlock Text="{Binding Requirements.Count, StringFormat='Requirements: {0}'}" />
                    <TextBlock Text="{Binding ParameterMappings.Count, StringFormat='Parameter Mappings: {0}'}" />

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,16,0,0">
                        <Button Content="Edit"
                                Style="{StaticResource MaterialDesignRaisedButton}"
                                Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                Visibility="{Binding DataContext.IsEditMode, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                                Margin="0,0,8,0"/>
                        <Button Content="Save"
                                Style="{StaticResource MaterialDesignRaisedButton}"
                                Command="{Binding DataContext.SaveCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                Visibility="{Binding DataContext.IsEditMode, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                Margin="0,0,8,0"
                                Background="{DynamicResource PrimaryHueMidBrush}"
                                Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                        <Button Content="Cancel"
                                Style="{StaticResource MaterialDesignOutlinedButton}"
                                Command="{Binding DataContext.CancelCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                Visibility="{Binding DataContext.IsEditMode, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </DockPanel>
</Window>